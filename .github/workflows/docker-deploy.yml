name: Docker Build and Deploy

on:
  push:
    branches: [ master, main ]
  pull_request:
    branches: [ master, main ]

env:
  DOCKER_IMAGE: harmful-meme-detector
  DOCKER_TAG: latest

jobs:
  build:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2
    
    - name: Log in to Docker Hub
      if: github.event_name != 'pull_request'
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}
    
    - name: Build and push Docker image
      uses: docker/build-push-action@v4
      with:
        context: .
        push: ${{ github.event_name != 'pull_request' }}
        tags: |
          ${{ secrets.DOCKER_USERNAME }}/${{ env.DOCKER_IMAGE }}:${{ env.DOCKER_TAG }}
          ${{ secrets.DOCKER_USERNAME }}/${{ env.DOCKER_IMAGE }}:${{ github.sha }}
        cache-from: type=gha
        cache-to: type=gha,mode=max
    
    - name: Image digest
      run: echo ${{ steps.docker_build.outputs.digest }}

  test:
    needs: build
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Run Docker Container
      run: |
        docker run -d -p 5000:5000 --name test-container ${{ secrets.DOCKER_USERNAME }}/${{ env.DOCKER_IMAGE }}:${{ env.DOCKER_TAG }}
        sleep 30
    
    - name: Test Health Endpoint
      run: |
        curl -f http://localhost:5000/health || exit 1
    
    - name: Test Info Endpoint
      run: |
        curl -f http://localhost:5000/info || exit 1
    
    - name: Cleanup
      run: docker stop test-container && docker rm test-container
